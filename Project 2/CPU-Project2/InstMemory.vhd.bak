library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity InstMemory isport(Address:in std_logic_vector(31 downto 0);     ReadData:out std_logic_vector(31 downto 0));end InstMemory;

architecture Behavioral of InstMemory is

type mem_type is array(0 to 256) of std_logic_vector(7 downto 0);
signal memArray: mem_type;

begin
process(Address) 
variable check_begin:boolean:=true;
begin
if (check_begin) then
-- set up memory with converted assembly code
--Code 4: - Pass
-- lw t1 0(t2)
memArray(0)<="10001101";
memArray(1)<="01001001";
memArray(2)<="00000000";
memArray(3)<="00000000";
-- sw t1 8(t3)
memArray(4)<="10101101";
memArray(5)<="10101001";
memArray(6)<="00000000";
memArray(7)<="00001000";

check_begin:=false;

end if;
ReadData<=memArray(to_integer(unsigned(Address))) & memArray(to_integer(unsigned(Address))+1) & memArray(to_integer(unsigned(Address))+2) & memArray(to_integer(unsigned(Address))+3);
end process;
end Behavioral;